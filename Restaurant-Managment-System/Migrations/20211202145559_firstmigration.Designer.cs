// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant_Managment_System.Models;

namespace Restaurant_Managment_System.Migrations
{
    [DbContext(typeof(RestaurantDbcontext))]
    [Migration("20211202145559_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Restaurant_Managment_System.Models.Customer", b =>
                {
                    b.Property<int>("Cust_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cust_Address")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cust_City")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cust_Contact")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cust_Email")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cust_NIC")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cust_Name")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cust_Password")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Cust_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Deal_Detail", b =>
                {
                    b.Property<int>("Deal_Id")
                        .HasColumnType("int");

                    b.Property<int>("Food_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UOM_Id")
                        .HasColumnType("int");

                    b.HasKey("Deal_Id", "Food_Id");

                    b.HasIndex("Food_Id");

                    b.HasIndex("UOM_Id");

                    b.ToTable("Deal_Details");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Deal_Master", b =>
                {
                    b.Property<int>("Deal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Deal_Desc")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Deal_Name")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Dis_Id")
                        .HasColumnType("int");

                    b.Property<int>("Person_Serve")
                        .HasColumnType("int");

                    b.Property<double>("Price_current")
                        .HasColumnType("float");

                    b.HasKey("Deal_Id");

                    b.HasIndex("Dis_Id");

                    b.ToTable("Deal_Masters");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Discount", b =>
                {
                    b.Property<int>("Dis_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Dis_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dis_Type_Id")
                        .HasColumnType("int");

                    b.Property<double>("Discount_Value")
                        .HasColumnType("float");

                    b.Property<DateTime>("From_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From_Time")
                        .HasColumnType("datetime2");

                    b.Property<double>("Min_Purchase")
                        .HasColumnType("float");

                    b.Property<DateTime>("To_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("To_Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Dis_Id");

                    b.HasIndex("Dis_Type_Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Discount_Type", b =>
                {
                    b.Property<int>("Dis_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Dis_Type_Desc")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Dis_Type_Name")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Dis_Type_Id");

                    b.ToTable("Discount_Types");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Employee", b =>
                {
                    b.Property<int>("Emp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Emp_Email")
                        .HasColumnType("varchar (25)");

                    b.Property<string>("Emp_Name")
                        .HasColumnType("varchar (15)");

                    b.Property<string>("Emp_Password")
                        .HasColumnType("varchar (15)");

                    b.Property<string>("Emp_contact")
                        .HasColumnType("varchar (15)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Emp_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Food", b =>
                {
                    b.Property<int>("Food_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cat_Id")
                        .HasColumnType("int");

                    b.Property<int>("Dis_Id")
                        .HasColumnType("int");

                    b.Property<string>("Food_Desc")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Food_Name")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Person_Serve")
                        .HasColumnType("int");

                    b.Property<double>("Price_current")
                        .HasColumnType("float");

                    b.Property<int>("UOM_Id")
                        .HasColumnType("int");

                    b.HasKey("Food_Id");

                    b.HasIndex("Cat_Id");

                    b.HasIndex("Dis_Id");

                    b.HasIndex("UOM_Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Food_Category", b =>
                {
                    b.Property<int>("Cat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cat_Name")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Cat_Id");

                    b.ToTable("Food_Categories");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Images", b =>
                {
                    b.Property<byte[]>("Image_Url")
                        .HasColumnType("varbinary(900)");

                    b.Property<int>("Deal_Id")
                        .HasColumnType("int");

                    b.Property<int>("Food_Id")
                        .HasColumnType("int");

                    b.Property<int>("Loc_Id")
                        .HasColumnType("int");

                    b.HasKey("Image_Url");

                    b.HasIndex("Deal_Id");

                    b.HasIndex("Food_Id");

                    b.HasIndex("Loc_Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Location", b =>
                {
                    b.Property<int>("Loc_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Loc_Name")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Loc_Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Measurement_Unit", b =>
                {
                    b.Property<int>("UOM_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("UOM_Desc")
                        .HasColumnType("varchar(25)");

                    b.HasKey("UOM_Id");

                    b.ToTable("Measurement_Units");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Opening_Hours", b =>
                {
                    b.Property<int>("Opn_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Day")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("From_Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("To_Time")
                        .HasColumnType("DateTime");

                    b.HasKey("Opn_Id");

                    b.ToTable("Opening_Hours");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Deal_Details", b =>
                {
                    b.Property<int>("Order_No")
                        .HasColumnType("int");

                    b.Property<int>("Deal_Id")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Order_No", "Deal_Id");

                    b.HasIndex("Deal_Id");

                    b.ToTable("Order_Deal_Details");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Master", b =>
                {
                    b.Property<int>("Order_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Book_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Cus_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Order_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Status")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Party_Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Order_No");

                    b.HasIndex("Cus_Id");

                    b.ToTable("Order_Masters");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Table", b =>
                {
                    b.Property<int>("Order_No")
                        .HasColumnType("int");

                    b.Property<int>("Table_No")
                        .HasColumnType("int");

                    b.HasKey("Order_No", "Table_No");

                    b.HasIndex("Table_No");

                    b.ToTable("Order_Tables");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_food_Detail", b =>
                {
                    b.Property<int>("Order_No")
                        .HasColumnType("int");

                    b.Property<int>("Food_Id")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Order_No", "Food_Id");

                    b.HasIndex("Food_Id");

                    b.ToTable("Order_Food_Details");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Payment", b =>
                {
                    b.Property<int>("Receipt_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Ammount")
                        .HasColumnType("float");

                    b.Property<double>("Dis_Amount")
                        .HasColumnType("float");

                    b.Property<int>("Dis_Id")
                        .HasColumnType("int");

                    b.Property<int>("Order_No")
                        .HasColumnType("int");

                    b.Property<DateTime>("Pay_DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pay_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Receipt_No");

                    b.HasIndex("Dis_Id");

                    b.HasIndex("Order_No");

                    b.HasIndex("Pay_Type_Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Payment_Type", b =>
                {
                    b.Property<int>("Pay_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Pay_Type_Desc")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Pay_Type_Id");

                    b.ToTable("Payment_Types");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Rating", b =>
                {
                    b.Property<int>("Order_No")
                        .HasColumnType("int");

                    b.Property<int>("Food_Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.HasKey("Order_No", "Food_Id");

                    b.HasIndex("Food_Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Restaurant_Details", b =>
                {
                    b.Property<int>("Res_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Res_Address")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Res_Area")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Res_Contact")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Res_Email")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Res_Name")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Res_Id");

                    b.ToTable("Restaurant_Details");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Role_Name")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Role_Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Table", b =>
                {
                    b.Property<int>("Table_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Loc_Id")
                        .HasColumnType("int");

                    b.Property<int>("Occupied")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Table_Name")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("seat")
                        .HasColumnType("int");

                    b.HasKey("Table_No");

                    b.HasIndex("Loc_Id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Deal_Detail", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Deal_Master", "Deal_Master")
                        .WithMany("Deal_Details")
                        .HasForeignKey("Deal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Food", "Food")
                        .WithMany("Deal_Details")
                        .HasForeignKey("Food_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Measurement_Unit", "Measurement_Unit")
                        .WithMany("Deal_Details")
                        .HasForeignKey("UOM_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal_Master");

                    b.Navigation("Food");

                    b.Navigation("Measurement_Unit");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Deal_Master", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Discount", "Discount")
                        .WithMany("Deal_Masters")
                        .HasForeignKey("Dis_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Discount", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Discount_Type", "discounts")
                        .WithMany("Discounts")
                        .HasForeignKey("Dis_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("discounts");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Employee", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Food", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Food_Category", "Food_Category")
                        .WithMany("foods")
                        .HasForeignKey("Cat_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Discount", "Discount")
                        .WithMany("Foods")
                        .HasForeignKey("Dis_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Measurement_Unit", "Measurement_unit")
                        .WithMany("Foods")
                        .HasForeignKey("UOM_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Food_Category");

                    b.Navigation("Measurement_unit");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Images", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Deal_Master", "Deal_Master")
                        .WithMany("Images")
                        .HasForeignKey("Deal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Food", "Food")
                        .WithMany("Images")
                        .HasForeignKey("Food_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Location", "Location")
                        .WithMany("Images")
                        .HasForeignKey("Loc_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal_Master");

                    b.Navigation("Food");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Deal_Details", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Deal_Master", "Deal_Master")
                        .WithMany("Order_Deal_Details")
                        .HasForeignKey("Deal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Order_Master", "Order_Master")
                        .WithMany("Order_Deal_Details")
                        .HasForeignKey("Order_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal_Master");

                    b.Navigation("Order_Master");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Master", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Customer", "Customer")
                        .WithMany("Order_Masters")
                        .HasForeignKey("Cus_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Table", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Order_Master", "Order_Master")
                        .WithMany("Order_Tables")
                        .HasForeignKey("Order_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Table", "Table")
                        .WithMany("Order_Tables")
                        .HasForeignKey("Table_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order_Master");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_food_Detail", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Food", "Food")
                        .WithMany("Order_Food_Details")
                        .HasForeignKey("Food_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Order_Master", "Order_Master")
                        .WithMany("Order_Food_Details")
                        .HasForeignKey("Order_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Order_Master");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Payment", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Discount", "Discount")
                        .WithMany("Payments")
                        .HasForeignKey("Dis_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Order_Master", "Order_Master")
                        .WithMany("Payments")
                        .HasForeignKey("Order_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Payment_Type", "Payment_Type")
                        .WithMany("Payments")
                        .HasForeignKey("Pay_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Order_Master");

                    b.Navigation("Payment_Type");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Rating", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Food", "Food")
                        .WithMany("Ratings")
                        .HasForeignKey("Food_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_Managment_System.Models.Order_Master", "Order_Master")
                        .WithMany("Ratings")
                        .HasForeignKey("Order_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Order_Master");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Table", b =>
                {
                    b.HasOne("Restaurant_Managment_System.Models.Location", "Location")
                        .WithMany("Tables")
                        .HasForeignKey("Loc_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Customer", b =>
                {
                    b.Navigation("Order_Masters");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Deal_Master", b =>
                {
                    b.Navigation("Deal_Details");

                    b.Navigation("Images");

                    b.Navigation("Order_Deal_Details");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Discount", b =>
                {
                    b.Navigation("Deal_Masters");

                    b.Navigation("Foods");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Discount_Type", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Food", b =>
                {
                    b.Navigation("Deal_Details");

                    b.Navigation("Images");

                    b.Navigation("Order_Food_Details");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Food_Category", b =>
                {
                    b.Navigation("foods");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Location", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Measurement_Unit", b =>
                {
                    b.Navigation("Deal_Details");

                    b.Navigation("Foods");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Order_Master", b =>
                {
                    b.Navigation("Order_Deal_Details");

                    b.Navigation("Order_Food_Details");

                    b.Navigation("Order_Tables");

                    b.Navigation("Payments");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Payment_Type", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Restaurant_Managment_System.Models.Table", b =>
                {
                    b.Navigation("Order_Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
